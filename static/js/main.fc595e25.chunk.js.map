{"version":3,"sources":["components/Burger/BurgerIngredients/BurgerIngredients.module.scss","components/Burger/BuildControls/BuildControl/BuildControl.module.scss","components/Layout/Layout.module.scss","components/Burger/Burger.module.scss","components/Burger/BuildControls/BuildControls.module.scss","hoc/Auxiliary.js","components/Layout/Layout.js","components/Burger/BurgerIngredients/BurgerIngredients.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","containers/BurgerBuilder/BurgerBuilder.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Auxiliary","props","children","Layout","className","classes","Content","BurgerIngredients","ingredient","this","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","Component","burger","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","Burger","BuildControl","label","Less","onClick","removed","disabled","More","added","controls","BuildControls","ctrl","ingredientAdded","ingredientRemoved","INGREDIENT_PRICES","salad","cheese","bacon","meat","BurgerBuilder","state","totalPrice","addIngredientHandler","updatedCount","updatedIngredient","priceAddition","newPrice","setState","removeIngredientHandler","oldCount","priceDeduction","disabledInfo","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","require","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.fc595e25.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredients_BreadBottom__3t9t0\",\"BreadTop\":\"BurgerIngredients_BreadTop__3x-F3\",\"Seeds1\":\"BurgerIngredients_Seeds1__2vnSf\",\"Seeds2\":\"BurgerIngredients_Seeds2__1oY7y\",\"Meat\":\"BurgerIngredients_Meat__jY1WW\",\"Cheese\":\"BurgerIngredients_Cheese__1HKV6\",\"Salad\":\"BurgerIngredients_Salad__3WCGC\",\"Bacon\":\"BurgerIngredients_Bacon__32gar\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__3jU1b\",\"Label\":\"BuildControl_Label__8x6Ve\",\"Less\":\"BuildControl_Less__1NMdb\",\"More\":\"BuildControl_More__nBAJr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__1LP5c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__2qLP5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__20wHj\",\"OrderButton\":\"BuildControls_OrderButton__2YgHn\",\"enable\":\"BuildControls_enable__3mLf4\"};","const Auxiliary = (props) => props.children;\r\n\r\nexport default Auxiliary;\r\n","import React from \"react\";\r\nimport Auxiliary from \"../../hoc/Auxiliary\";\r\nimport classes from \"./Layout.module.scss\";\r\n\r\nconst Layout = props => (\r\n\t<Auxiliary>\r\n\t\t<div>Toolbar, Sidedrawer, Backdrop</div>\r\n\t\t<main className={classes.Content}>{props.children}</main>\r\n\t</Auxiliary>\r\n);\r\n\r\nexport default Layout;\r\n","import React, {Component} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classes from \"./BurgerIngredients.module.scss\";\r\n\r\nclass BurgerIngredients extends Component {\r\n\trender() {\r\n\t\tlet ingredient = null;\r\n\r\n\t\tswitch (this.props.type) {\r\n\t\t\tcase \"bread-bottom\":\r\n\t\t\t\tingredient = <div className={classes.BreadBottom}></div>;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"bread-top\":\r\n\t\t\t\tingredient = (\r\n\t\t\t\t\t<div className={classes.BreadTop}>\r\n\t\t\t\t\t\t<div className={classes.Seeds1}></div>\r\n\t\t\t\t\t\t<div className={classes.Seeds2}></div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"meat\":\r\n\t\t\t\tingredient = <div className={classes.Meat}></div>;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"cheese\":\r\n\t\t\t\tingredient = <div className={classes.Cheese}></div>;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"bacon\":\r\n\t\t\t\tingredient = <div className={classes.Bacon}></div>;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"salad\":\r\n\t\t\t\tingredient = <div className={classes.Salad}></div>;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tingredient = null;\r\n\t\t}\r\n\t\treturn ingredient;\r\n\t}\r\n}\r\n\r\nBurgerIngredients.propTypes = {\r\n\ttype: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngredients;\r\n","import React from \"react\";\r\nimport classes from \"./Burger.module.scss\";\r\nimport BurgerIngredients from \"./BurgerIngredients/BurgerIngredients\";\r\n\r\nconst burger = props => {\r\n\tlet transformedIngredients = Object.keys(props.ingredients)\r\n\t\t.map(igKey => {\r\n\t\t\treturn [...Array(props.ingredients[igKey])].map((_, i) => {\r\n\t\t\t\treturn <BurgerIngredients key={igKey + i} type={igKey} />;\r\n\t\t\t});\r\n\t\t})\r\n\t\t.reduce((arr, el) => {\r\n\t\t\treturn arr.concat(el);\r\n\t\t}, []);\r\n\r\n\tif (transformedIngredients.length === 0) {\r\n\t\ttransformedIngredients = <p>Please start adding ingredients!</p>;\r\n\t}\r\n\treturn (\r\n\t\t<div className={classes.Burger}>\r\n\t\t\t<BurgerIngredients type=\"bread-top\" />\r\n\t\t\t{transformedIngredients}\r\n\t\t\t<BurgerIngredients type=\"bread-bottom\" />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default burger;\r\n","import React from \"react\";\r\nimport classes from \"./BuildControl.module.scss\";\r\n\r\nconst BuildControl = props => {\r\n\treturn (\r\n\t\t<div className={classes.BuildControl}>\r\n\t\t\t<div className={classes.label}>{props.label}</div>\r\n\t\t\t<button\r\n\t\t\t\tclassName={classes.Less}\r\n\t\t\t\tonClick={props.removed}\r\n\t\t\t\tdisabled={props.disabled}\r\n\t\t\t>\r\n\t\t\t\tLess\r\n\t\t\t</button>\r\n\t\t\t<button className={classes.More} onClick={props.added}>\r\n\t\t\t\tMore\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default BuildControl;\r\n","import React from \"react\";\r\nimport BuildControl from \"./BuildControl/BuildControl\";\r\nimport classes from \"./BuildControls.module.scss\";\r\n\r\nconst controls = [\r\n\t{label: \"Salad\", type: \"salad\"},\r\n\t{label: \"Bacon\", type: \"bacon\"},\r\n\t{label: \"Cheese\", type: \"cheese\"},\r\n\t{label: \"Meat\", type: \"meat\"}\r\n];\r\n\r\nconst BuildControls = props => {\r\n\treturn (\r\n\t\t<div className={classes.BuildControls}>\r\n\t\t\t{controls.map(ctrl => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<BuildControl\r\n\t\t\t\t\t\tkey={ctrl.label}\r\n\t\t\t\t\t\tlabel={ctrl.label}\r\n\t\t\t\t\t\tadded={() => props.ingredientAdded(ctrl.type)}\r\n\t\t\t\t\t\tremoved={() => props.ingredientRemoved(ctrl.type)}\r\n\t\t\t\t\t\tdisabled={props.disabled[ctrl.type]}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default BuildControls;\r\n","import React, {Component} from \"react\";\r\nimport Auxiliary from \"../../hoc/Auxiliary\";\r\nimport Burger from \"../../components/Burger/Burger\";\r\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\r\n\r\nconst INGREDIENT_PRICES = {\r\n\tsalad: 0.5,\r\n\tcheese: 0.4,\r\n\tbacon: 0.7,\r\n\tmeat: 1.3\r\n};\r\n\r\nclass BurgerBuilder extends Component {\r\n\t// constructor(props){\r\n\t// \tsuper(props);\r\n\t// \tthis.state={}\r\n\t// }\r\n\r\n\tstate = {\r\n\t\tingredients: {\r\n\t\t\tsalad: 0,\r\n\t\t\tbacon: 0,\r\n\t\t\tcheese: 0,\r\n\t\t\tmeat: 0\r\n\t\t},\r\n\t\ttotalPrice: 4\r\n\t};\r\n\r\n\taddIngredientHandler = type => {\r\n\t\tconst oldCount = this.state.ingredients[type];\r\n\t\tconst updatedCount = oldCount + 1;\r\n\t\tconst updatedIngredient = {...this.state.ingredients};\r\n\t\tupdatedIngredient[type] = updatedCount;\r\n\t\tconst priceAddition = INGREDIENT_PRICES[type];\r\n\t\tconst oldPrice = this.state.totalPrice;\r\n\t\tconst newPrice = oldPrice + priceAddition;\r\n\t\tthis.setState({ingredients: updatedIngredient, totalPrice: newPrice});\r\n\t};\r\n\tremoveIngredientHandler = type => {\r\n\t\tconst oldCount = this.state.ingredients[type];\r\n\t\tif (oldCount <= 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst updatedCount = oldCount - 1;\r\n\t\tconst updatedIngredient = {...this.state.ingredients};\r\n\t\tupdatedIngredient[type] = updatedCount;\r\n\t\tconst priceDeduction = INGREDIENT_PRICES[type];\r\n\t\tconst oldPrice = this.state.totalPrice;\r\n\t\tconst newPrice = oldPrice - priceDeduction;\r\n\t\tthis.setState({ingredients: updatedIngredient, totalPrice: newPrice});\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst disabledInfo = {\r\n\t\t\t...this.state.ingredients\r\n\t\t};\r\n\t\tfor (let key in disabledInfo) {\r\n\t\t\tdisabledInfo[key] = disabledInfo[key] <= 0;\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<Auxiliary>\r\n\t\t\t\t<Burger ingredients={this.state.ingredients} />\r\n\t\t\t\t<BuildControls\r\n\t\t\t\t\tingredientAdded={this.addIngredientHandler}\r\n\t\t\t\t\tingredientRemoved={this.removeIngredientHandler}\r\n\t\t\t\t\tdisabled={disabledInfo}\r\n\t\t\t\t/>\r\n\t\t\t</Auxiliary>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default BurgerBuilder;\r\n","import React, {Component} from \"react\";\nimport Layout from \"./components/Layout/Layout\";\nimport BurgerBuilder from \"./containers/BurgerBuilder/BurgerBuilder\";\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Layout>\n\t\t\t\t\t<BurgerBuilder></BurgerBuilder>\n\t\t\t\t</Layout>\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nrequire(\"typeface-roboto\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}